generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  username      String?   @unique
  channelName   String?
  bio           String?   @db.Text
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  followers Follow[] @relation("FollowedBy")
  following Follow[] @relation("Following")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id String @id @default(cuid())

  follower   User   @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  followerId String

  following   User   @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  followingId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}
